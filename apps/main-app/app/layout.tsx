'use client';
/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable @typescript-eslint/no-unsafe-argument */
import type { Metadata } from 'next';
import WujieReact from 'wujie-react';
import { inter, lexend } from '~/app/fonts';
import credentialsFetch from '~/micro/fetch';
import hostMap from '~/micro/hostmap';
import lifecycle from '~/micro/lifecycle';
import plugins from '~/micro/plugin';
import './globals.css';

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

const { setupApp, preloadApp, bus } = WujieReact;
const isProduction = process.env.NODE_ENV === 'production';
// bus.$on('click', (msg) => window.alert(msg));

const degrade =
  window.localStorage.getItem('degrade') === 'true' ||
  !window.Proxy ||
  !window.CustomElementRegistry;

const attrs = isProduction ? { src: hostMap('//localhost:4001/') } : {};
/**
 * 配置应用，主要是设置默认配置
 * preloadApp、startApp的配置会基于这个配置做覆盖
 */
setupApp({
  name: 'knowledge',
  url: hostMap('//localhost:4001/'),
  attrs,
  exec: true,
  fetch: credentialsFetch,
  plugins,
  prefix: { 'prefix-dialog': '/dialog', 'prefix-location': '/location' },
  degrade,
  ...lifecycle,
} as any);

if (window.localStorage.getItem('preload') !== 'false') {
  preloadApp({
    name: 'knowledge',
    url: '//localhost:4001/',
  });
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${inter.variable} ${inter.className} ${lexend.className}`}
      >
        {children}
      </body>
    </html>
  );
}
